"" .ideavimrc - magidc

"" Settings ========================================================
set scrolloff=10
set linenumber
set showmode
set showcmd
set smartcase
set incsearch
set hlsearch
set visualbell
set clipboard+=unnamed   
let mapleader = " "

"" Key mappings ========================================================
inoremap jk <Esc>
vnoremap jk <Esc>

" Edit (leader p, Bs, x, /, a, o, O)
" Easy visual indentation
vnoremap < <gv
vnoremap > >gv
"Replace word with paste
nnoremap <leader>p "_diwP
nnoremap <leader>Bs diw
nnoremap <leader>x ciw
"Change inside parentheses
nnoremap <leader>/ ci(
"Delete function argument
nnoremap <leader>a daa
nnoremap <leader>o o<ESC>
nnoremap <leader>O O<ESC>
nnoremap <C-Y> <C-R>
vnoremap + :action EditorSelectWord<cr>
vnoremap _ :action EditorUnSelectWord<cr>

" Motions
nnoremap m ]m
nnoremap M [m
nnoremap H ^
nnoremap L $
map s <Plug>(easymotion-s)

" Windows and buffers (leader w)
nnoremap <leader>wh <C-w>h
nnoremap <leader>wl <C-w>l
nnoremap <leader>wk <C-w>k
nnoremap <leader>wj <C-w>j
nnoremap <leader>ww :action CloseAllEditorsButActive<cr>
nnoremap <leader>wq :action CloseContent<cr>
map WQ :wqall<CR>
map W :wall<CR>
nnoremap <leader>wv :action SplitVertically<cr>
nnoremap <leader>ws :action SplitHorizontally<cr>
nnoremap <leader>wu :action Unsplit<cr>
nnoremap <leader>wm :action MoveEditorToOppositeTabGroup<cr>

" Folds
map | :action CollapseAllRegions<CR>
map -- :action ExpandAllRegions<CR>

" Macros and registers
" Execute macro saved in 'q' register
nnoremap qj @q
" Repeat las command
nnoremap , @:
nnoremap "_ t

" Finder (leader f)
nnoremap ;; :nohlsearch<CR>
map <leader>ff :action GotoClass<cr>
map <leader>fn :action GotoFile<cr>
map <leader>fg :action FindInPath<cr>
map <leader>fh :action RecentFiles<cr>
map <leader>fl :action RecentLocations<cr>
map <leader>fs :action GotoSymbol<cr>
map <leader>fz :action Find<cr>
map <leader>fr :action Replace<cr>
map <leader>fx :action PasteMultiple<cr>
map <leader>ft :action ActivateTODOToolWindow<cr>

" Views (leader v)
map <leader>vf :action ActivateProjectToolWindow<cr>
map <leader>vp :action ActivateProblemsViewToolWindow<cr>
map <leader>vs :action ActivateStructureToolWindow<cr>
map <leader>vt :action ActivateTerminalToolWindow<cr>

" Debug (leader d)
nnoremap <leader>dr :action Run<cr>
nnoremap <leader>dd :action Debug<cr>
nnoremap <leader>dk :action Stop<cr>
nnoremap <leader>db :action ToggleLineBreakpoint<cr>
nnoremap <leader>da :action XDebugger.MuteBreakpoints<cr>
nnoremap <leader>dv :action StepOver<cr>
nnoremap <leader>di :action StepInto<cr>
nnoremap <leader>do :action StepOut<cr>
nnoremap <leader>dc :action Resume<cr>
nnoremap <leader>dx :action QuickEvaluateExpression<cr>
nnoremap <leader>dw :action Debugger.AddToWatch<cr>

" Code navigation (leader c)
nnoremap <leader>cd :action GotoDeclaration<cr>
nnoremap <leader>cc :action GotoTypeDeclaration<cr>
nnoremap <leader>ci :action GotoImplementation<cr>
nnoremap <leader>cs :action GotoSuperMethod<cr>
nnoremap <leader>cr :action ShowUsages<cr>
nnoremap <leader>ca :action ShowIntentionActions<cr>
nnoremap <leader>cv :action QuickJavaDoc<cr>
nnoremap <leader>cp :action Back<cr>
nnoremap <leader>cn :action Forward<cr>

" Refactoring (leader r)
nnoremap <leader>rn :action RenameElement<cr>
nnoremap <leader>rv :action IntroduceVariable<cr>
nnoremap <leader>rc :action IntroduceConstant<cr>
nnoremap <leader>rf :action IntroduceField<cr>
nnoremap <leader>rm :action ExtractMethod<cr>
nnoremap <leader>rl :action Refactorings.QuickListPopupAction<cr>
nnoremap <leader>rf :action ReformatCode<cr>
nnoremap <leader>ro :action OptimizeImports<CR>
nnoremap <leader>ri :action Inline<CR>
nnoremap <leader>ra :action AnonymousToInner<CR>

" Source generation (leader s)
nnoremap <leader>sc :action GenerateConstructor<cr>
nnoremap <leader>sg :action GenerateGetterAndSetter<cr>
nnoremap <leader>se :action GenerateEquals<cr>
nnoremap <leader>sn :action NewClass<cr>
nnoremap <leader>sf :action NewScratchFile<cr>

" Errors and diagnostics (leader e)
map <leader>en :action GotoNextError<cr>
map <leader>ep :action GotoPreviousError<cr>

" Git (leader g)
map <leader>gc :action CheckinProject<cr>
map <leader>gs :action ActivateVersionControlToolWindow<cr>
map <leader>gb :action Git.Branches<cr>
 
" Screen display options (leader s)
map <leader>sd :action ToggleDistractionFreeMode<cr>
map <leader>sz :action ToggleZenMode<cr>
map <leader>sf :action ToggleFullScreen<cr>

" Plugin Settings ========================================================
set surround
set highlightedyank
set sneak
set nerdtree
set argtextobj

" Easymotion settings
set easymotion
set notimeout

" " Which-key settings
" set which-key
" let g:WhichKey_FontSize = 16
" let g:WhichKey_CommandColor = "#41ead4"
" let g:WhichKey_PrefixColor = "#f335b2"
" let g:WhichKey_SortOrder = "by_key_prefix_first"
"
" let g:WhichKeyDesc_leader = "<leader> Leader key"
"
" let g:WhichKeyDesc_leader = "<leader>x Open file explorer"
"
" let g:WhichKeyDesc_easymotion = "s Jump with Easymotion"
" let g:WhichKeyDesc_easymotion_prefix = "<leader><leader>"
"
" let g:WhichKeyDesc_comment = "<leader>c Comment line"
"
" let g:WhichKeyDesc_fold = "<leader>z Folding"
" let g:WhichKeyDesc_fold_all = "<leader>zc Fold all regions"
" let g:WhichKeyDesc_unfold_all = "<leader>zo Unfold all regions"
"
" let g:WhichKeyDesc_window = "<leader>w Window splits"
" let g:WhichKeyDesc_window_split_vertically = "<leader>wv Split vertically"
" let g:WhichKeyDesc_window_split_horizontally = "<leader>wh Split horizontally"
" let g:WhichKeyDesc_window_split_unsplit = "<leader>wu Unsplit"
" let g:WhichKeyDesc_window_split_move_editor = "<leader>wm Move editor to opposite tab group"
"
"
" let g:WhichKeyDesc_display = "<leader>d Display options"
" let g:WhichKeyDesc_zen_mode = "<leader>dz Toggle Zen mode"
" let g:WhichKeyDesc_df_mode = "<leader>dd Toggle Distraction-Free mode"
" let g:WhichKeyDesc_fullscreen = "<leader>df Toggle full screen"
"
" let g:WhichKeyDesc_action= "<leader>a Actions"
" let g:WhichKeyDesc_action_context_menu = "<leader>am Open context menu"
" let g:WhichKeyDesc_action_search = "<leader>as Open command modal"
"
" let g:WhichKeyDesc_file_quickLook = "<leader><leader> Recent files"
"
" let g:WhichKeyDesc_file_nav = "<leader>f File navigation"
" let g:WhichKeyDesc_file_nav_goto_file = "<leader>ff Go to file"
" let g:WhichKeyDesc_file_nav_goto_content = "<leader>fc Search for file content"
" let g:WhichKeyDesc_file_nav_show_recent_files = "<leader>fr Show recent files"
" let g:WhichKeyDesc_file_nav_show_recent_locations = "<leader>fl Show recent locations"
"
" let g:WhichKeyDesc_close_tab = "<leader>q Close active tab"
"
" let g:WhichKeyDesc_refactoring = "<leader>r Refactoring menu"
" let g:WhichKeyDesc_refactoring_rename = "<leader>rn Rename element"
" let g:WhichKeyDesc_refactoring_method = "<leader>rm Extract method"
" let g:WhichKeyDesc_refactoring_variable = "<leader>rv Introduce variable"
" let g:WhichKeyDesc_refactoring_field = "<leader>rf Introduce field"
" let g:WhichKeyDesc_refactoring_signature = "<leader>rs Change signature"
" let g:WhichKeyDesc_refactoring_all = "<leader>rr Open refactorings list"
"
" let g:WhichKeyDesc_goto = "<leader>g Go to X"
" let g:WhichKeyDesc_goto_declaration = "<leader>gd Go to Definition"
" let g:WhichKeyDesc_goto_type_declaration = "<leader>gy Go to Type Definition"
" let g:WhichKeyDesc_goto_implementation = "<leader>gi Go to Implementation"
" let g:WhichKeyDesc_goto_usages = "<leader>gu Go to Usages"
" let g:WhichKeyDesc_goto_test = "<leader>gt Go to Test"
" let g:WhichKeyDesc_goto_back = "<leader>gb Go Back"
" let g:WhichKeyDesc_goto_forward = "<leader>gf Go Forward"
"
" let g:WhichKeyDesc_git = "<leader>g Git operations"
" let g:WhichKeyDesc_git_commit = "<leader>gc Open Git commit dialog"
" let g:WhichKeyDesc_git_status = "<leader>gs Open Git status dialog"
" let g:WhichKeyDesc_git_branches = "<leader>gb Open Git branches list"
"
" let g:WhichKeyDesc_errors = "<leader>e Error navigation"
" let g:WhichKeyDesc_errors_next = "<leader>en Go to next error in solution"
" let g:WhichKeyDesc_errors_prev = "<leader>ep Go to previous error in solution"
